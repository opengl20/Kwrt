#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build OpenWrt for Raspberry Pi 4

on:
  workflow_dispatch:  # Êîπ‰∏∫ÊâãÂä®Ëß¶Âèë

env:
  REPO_TOKEN: ${{ secrets.TOKEN_KIDDIN9 }}
  TZ: Asia/Shanghai
  UPLOAD_FIRMWARE_FOR_RELEASE: true  # Á°Æ‰øù‰∏ä‰º†Âà∞ Release

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build bcm27xx_bcm2711 (Raspberry Pi 4)

    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
        fetch-depth: 0

    - name: Load Settings.ini
      run: |
        source "${GITHUB_WORKSPACE}/devices/common/settings.ini"
        if [ -f "devices/bcm27xx_bcm2711/settings.ini" ]; then
          source "${GITHUB_WORKSPACE}/devices/bcm27xx_bcm2711/settings.ini"
        fi
        echo "REPO_URL=${REPO_URL}" >> $GITHUB_ENV
        echo "REPO_BRANCH=${REPO_BRANCH}" >> $GITHUB_ENV
        echo "CONFIG_FILE=${CONFIG_FILE}" >> $GITHUB_ENV
        echo "DIY_SH=${DIY_SH}" >> $GITHUB_ENV
        echo "FREE_UP_DISK=${FREE_UP_DISK}" >> $GITHUB_ENV
        sed -i "1a REPO_TOKEN=${{ secrets.TOKEN_KIDDIN9 }}" ${GITHUB_WORKSPACE}/devices/common/diy.sh
        sed -i "1a TARGET=bcm27xx_bcm2711" ${GITHUB_WORKSPACE}/devices/common/diy.sh
        echo "ARCH=linux/arm64" >> $GITHUB_ENV
        echo "MTARGET=aarch64_cortex-a72" >> $GITHUB_ENV

    - name: Free disk space
      uses: coder-xiaomo/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang flex bison g++ gawk \
        gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
        python3-setuptools rsync swig unzip zlib1g-dev file wget \
        llvm python3-pyelftools libpython3-dev aria2 jq qemu-utils ccache rename \
        libelf-dev device-tree-compiler libgmp3-dev libmpc-dev libfuse-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "Asia/Shanghai"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"

    - name: Get current date
      id: date
      run: |
        echo "date=$(date +'%m/%d_%Y_%H/%M')" >> $GITHUB_ENV
        echo "date2=$(date +'%m/%d %Y')" >> $GITHUB_ENV
        echo "VERSION=$(date +'%m.%d')" >> $GITHUB_ENV

    - name: Clone source code
      run: |
        set -x
        REPO_BRANCH="openwrt-24.10"
        git clone $REPO_URL -b $REPO_BRANCH openwrt

    - name: Free up disk space
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo mkdir -p -m 777 /mnt/openwrt/dl /mnt/openwrt/staging_dir /mnt/openwrt/build_dir
        ln -sf /mnt/openwrt/dl openwrt/dl
        ln -sf /mnt/openwrt/staging_dir openwrt/staging_dir
        ln -sf /mnt/openwrt/build_dir openwrt/build_dir

    - name: Load custom configuration
      run: |
        function git_clone_path() {
          trap 'rm -rf "$tmpdir"' EXIT
          branch="$1" rurl="$2" mv="$3"
          [[ "$mv" != "mv" ]] && shift 2 || shift 3
          rootdir="$PWD"
          tmpdir="$(mktemp -d)" || exit 1
          if [ ${#branch} -lt 10 ]; then
          git clone -b "$branch" --depth 1 --filter=blob:none --sparse "$rurl" "$tmpdir"
          cd "$tmpdir"
          else
          git clone --filter=blob:none --sparse "$rurl" "$tmpdir"
          cd "$tmpdir"
          git checkout $branch
          fi
          if [ "$?" != 0 ]; then
            echo "error on $rurl"
            exit 1
          fi
          git sparse-checkout init --cone
          git sparse-checkout set $@
          [[ "$mv" != "mv" ]] && cp -rn ./* $rootdir/ || mv -n $@/* $rootdir/$@/
          cd $rootdir
          }
        export -f git_clone_path
        cp -rf devices/common/. openwrt/
        cp -rf devices/bcm27xx_bcm2711/. openwrt/
        cp -rf devices openwrt/
        cd openwrt
        chmod +x devices/common/$DIY_SH
        /bin/bash "devices/common/$DIY_SH"
        cp -f devices/common/$CONFIG_FILE .config
        if [ -f "devices/bcm27xx_bcm2711/$CONFIG_FILE" ]; then
          echo >> .config
          cat devices/bcm27xx_bcm2711/$CONFIG_FILE >> .config
        fi
        if [ -f "devices/bcm27xx_bcm2711/$DIY_SH" ]; then
          chmod +x devices/bcm27xx_bcm2711/$DIY_SH
          /bin/bash "devices/bcm27xx_bcm2711/$DIY_SH"
        fi

    - name: Apply patches
      run: |
        cd openwrt
        cp -rn devices/common/patches devices/bcm27xx_bcm2711/
        if [ -n "$(ls -A devices/bcm27xx_bcm2711/*.bin.patch 2>/dev/null)" ]; then
          git apply devices/bcm27xx_bcm2711/patches/*.bin.patch
        fi
        find "devices/bcm27xx_bcm2711/patches" -maxdepth 1 -type f -name '*.revert.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -R -B --merge -p1 --forward"
        find "devices/bcm27xx_bcm2711/patches" -maxdepth 1 -type f -name '*.patch' ! -name '*.revert.patch' ! -name '*.bin.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -B --merge -p1 --forward"
        sed -i '$a  \
        CONFIG_CPU_FREQ_GOV_POWERSAVE=y \
        CONFIG_CPU_FREQ_GOV_USERSPACE=y \
        CONFIG_CPU_FREQ_GOV_ONDEMAND=y \
        CONFIG_CPU_FREQ_GOV_CONSERVATIVE=y \
        CONFIG_CRYPTO_CHACHA20_NEON=y \
        CONFIG_CRYPTO_CHACHA20POLY1305=y \
        CONFIG_FAT_DEFAULT_IOCHARSET="utf8" \
        ' `find target/linux -path "target/linux/*/config-*"`

    - name: Defconfig
      run: |
        cd openwrt
        make defconfig
        cat .config

    - name: Cache
      uses: stupidloud/cachewrtbuild@main
      with:
        ccache: 'true'
        mixkey: bcm27xx_bcm2711
        prefix: ${{ github.workspace }}/openwrt

    - name: Compile the firmware
      id: compile
      run: |
        shopt -s extglob
        cd openwrt
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make V=s &>build.log || (tail -50 build.log; exit 1)

    - name: Organize files
      id: organize
      continue-on-error: true
      run: |
        shopt -s extglob
        cd openwrt/bin/targets/*/*/
        cp $GITHUB_WORKSPACE/openwrt/.config bcm27xx_bcm2711.config || true
        cp $GITHUB_WORKSPACE/openwrt/build_dir/target-*/linux-*/linux-*/.config bcm27xx_bcm2711_kernel.config || true
        rm -rf kwrt-!(*imagebuilder*)
        Emoji=("üéâ" "ü§û" "‚ú®" "üéÅ" "üéà" "üéÑ" "üé®" "üíã" "üçì" "üçï" "üçâ" "üíê" "üå¥" "üöÄ" "üõ∏" "üóΩ" "‚õÖ" "üåà" "üî•" "‚õÑ" "üê∂" "üèÖ" "ü¶Ñ" "üê§")
        echo "EMOJI=${Emoji[$[$RANDOM % ${#Emoji[@]}]]}" >> $GITHUB_ENV

    - name: Create release
      id: create_release
      if: env.REPO_TOKEN && env.UPLOAD_FIRMWARE_FOR_RELEASE == 'true'
      continue-on-error: true
      run: |
        echo -e "Raspberry Pi 4 OpenWrt Firmware\n" >> release.txt
        echo -e "Build Date: ${{ env.date2 }}\n" >> release.txt

    - name: Upload firmware for release
      uses: softprops/action-gh-release@master
      continue-on-error: true
      if: env.REPO_TOKEN && env.UPLOAD_FIRMWARE_FOR_RELEASE == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_KIDDIN9 }}
      with:
        files: "openwrt/bin/targets/*/*/*"
        name: ${{ env.date2 }} Raspberry Pi 4 ${{ env.EMOJI }}
        tag_name: ${{ env.date }}_bcm27xx_bcm2711
        body_path: release.txt

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      continue-on-error: true
      if: env.UPLOAD_FIRMWARE_FOR_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 1  # Âè™‰øùÁïôÊúÄÊñ∞ Release
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_KIDDIN9 }}
